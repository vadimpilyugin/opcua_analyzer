# Generated by binpac_quickstart

%include consts.pac

type opcua_GenericMsg(is_orig: bool) = record {
  message_type: uint8[3];
  f_byte: uint8;
  message_size: uint32;
  payload: case $context.flow.enum_message(message_type) of {
    HELLO -> hello_msg: opcua_HelloMsg;
    ACK -> ack_msg: opcua_AckMsg;
    ERROR -> err_msg: opcua_ErrorMsg;
    OPEN -> open_msg: opcua_Msg(is_orig);
    MESSAGE -> msg: opcua_Msg(is_orig);
    OTHER -> data: bytestring &restofdata;
  } &length = message_size - 8;
} &byteorder=littleendian &length = message_size;

type opcua_AckMsg = record {
  ProtocolVersion: uint32;
  ReceiveBufferSize: uint32;
  SendBufferSize: uint32;
  MaxMessageSize: uint32;
  MaxChunkCount: uint32;
} &byteorder=littleendian;

type opcua_HelloMsg = record {
  params: opcua_AckMsg;
  Path: uint32;
  EndpointUrl: bytestring &restofdata;
} &byteorder=littleendian;

type opcua_ErrorMsg = record {
  Error: uint32;
  Reason: bytestring &restofdata;
};

type opcua_Msg(is_orig: bool) = record {
  SecureChannelId: uint32;
  other: bytestring &restofdata;
};