// Generated by binpac_quickstart

#pragma once

#include "events.bif.h"


#include "zeek/analyzer/protocol/tcp/TCP.h"

#include "opcua_pac.h"

namespace zeek { namespace analyzer { namespace Demo_opcua {

class opcua_Analyzer: public tcp::TCP_ApplicationAnalyzer
{
public:
	opcua_Analyzer(Connection* conn);
	virtual ~opcua_Analyzer();

	// Overriden from Analyzer.
	virtual void Done();
	
	virtual void DeliverStream(int len, const u_char* data, bool orig);
	virtual void Undelivered(uint64_t seq, int len, bool orig);

	// Overriden from tcp::TCP_ApplicationAnalyzer.
	virtual void EndpointEOF(bool is_orig);
	

	static analyzer::Analyzer* InstantiateAnalyzer(Connection* conn)
		{ return new opcua_Analyzer(conn); }

protected:
	binpac::opcua::opcua_Conn* interp;
	bool had_gap;
	};

} } } // namespace analyzer::*
